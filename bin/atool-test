#!/usr/bin/env node

var cp = require('child_process');

function start() {
  const p = cp.fork(__dirname + '/atool-test', process.argv.slice(2));
  p.on('message', function(data) {
    if (data === 'restart') {
      p.kill('SIGINT');
      start();
    }
  });
  p.on('exit', function(code) {
    process.exit(code);
  });
}

if (!process.send) {
  start();
} else {
  var program = require('commander');
  var cwd = process.cwd();

  program
    .allowUnknownOption()
    .version(require('../package').version, '-v, --version')
    .option('-p, --port <n>', 'server port. Default: 9876')
    .option('--no-chai', 'run tests with custom assert library')
    .option('--no-coverage', 'without coverage')
    .option('-k, --keep', 'keep process after tests')
    .option('--config <path>', 'custom config path, default is webpack.config.js')
    .parse(process.argv);

  var args = process.argv.splice(2);
  ['--no-chai', '--no-coverage', '--keep', '-k'].forEach(function(o) {
    var index = args.indexOf(o);
    if ( index > -1) {
      args.splice(index, 1);
    }
  });

  ['-p', '--port', '--config'].forEach(function(o) {
    var index = args.indexOf(o);
    if ( index > -1) {
      args.splice(index, 2);
    }
  });

  require('../lib')({
    port: program.port || '9876',
    chai: program.chai,
    keep: program.keep,
    coverage: program.coverage,
    config: program.config || 'webpack.config.js',
    args: args,
  });

  require('atool-monitor').emit();
}
